# We currently have 3 execution environments:
# - arbiter, a linux box that does security enforcement. Should never run tests.
# - our mac machine that has 12 cores that is used to run mac tests, build mac _and_ emscripten release
# - autoscaling linux cloud that's used for everything else

steps:

# Basic Phase - Run super fast things and things that commonly catch bugs
  - label: ":linux::cloud: linters.sh"
    command: .buildkite/linters.sh
    <<: &elastic
      agents:
        os: linux
        queue: elastic
      plugins:
        - docker#0d9b114b0ca8ec7167787285274aa3842392374d:
            image: "darkdimius/sorbet-build-image:latest"
            workdir: /app
            init: true
            propagate-environment: true
            environment:
              - "CODECOV_TOKEN"
            volumes:
              - "/usr/local/var/bazelcache:/usr/local/var/bazelcache"

  - label: ":mac: test-static-sanitized.sh (master only)"
    command: .buildkite/test-static-sanitized.sh
    agents:
      os: mac

  - label: ":linux::cloud: test-static-sanitized.sh"
    command: .buildkite/test-static-sanitized.sh
    <<: *elastic

  - wait: ~

# Build Phase - Build all our artifacts
  - label: ":linux::cloud: build-website.sh"
    command: .buildkite/build-website.sh
    artifact_paths: _out_/**/*
    <<: *elastic


  - label: ":linux::cloud: build-sorbet-runtime.sh"
    command: .buildkite/build-sorbet-runtime.sh
    artifact_paths: _out_/**/*
    <<: *elastic


  - label: ":mac: build-static-release.sh"
    command: .buildkite/build-static-release.sh
    artifact_paths: _out_/**/*
    agents:
      os: mac
  - label: ":linux::cloud: build-emscripten.sh"
    command: .buildkite/build-emscripten.sh
    artifact_paths: _out_/**/*
    <<: *elastic
  - label: ":linux::cloud: build-static-release.sh"
    command: .buildkite/build-static-release.sh
    artifact_paths: _out_/**/*
    <<: *elastic
  - wait: ~

# Test Sorbet Gem Phase - Its own phase because it relies on the gem build built
    # TODO(jez) Test on linux
  - label: ":mac: test-sorbet-gem.sh"
    command: .buildkite/test-sorbet-gem.sh
    agents:
      os: mac
  - wait: ~

# Deploy Phase - Send the artifacts to the world
  - label: ":linux: publish.sh"
    command: .buildkite/publish.sh
    agents:
      os: linux
  - wait: ~

# Success Phase - Allow the PR to be merged
  - label: "All tests and builds succeeded"
    command: .buildkite/all-succeeded.sh
  - wait: ~
